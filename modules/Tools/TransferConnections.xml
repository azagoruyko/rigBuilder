<module name="transferConnections" muted="0" uid="af899998ea1544a8a63825cbd28d84e9">
<run><![CDATA[import pymel.core as pm
import json

def transferConnections(src, dest, inputs=True, outputs=True):
    src = pm.PyNode(src)
    dest = pm.PyNode(dest)
    
    if inputs:
        for aDest, aSrc in src.inputs(p=True, c=True):
            newDest = dest + "." + aDest.longName()
            
            if pm.objExists(newDest):
                if aDest.longName() == "inverseScale" and aSrc.longName() == "scale":
                    continue
                    
                print("Connect '%s' to '%s'"%(aSrc, newDest))            
                pm.connectAttr(aSrc, newDest, f=True)
                pm.disconnectAttr(aSrc, aDest)
            else:
                pm.warning("transferConnections: cannot find destination "+newDest)  
    
    if outputs:            
        for aSrc, aDest in src.outputs(p=True, c=True):
            newSrc = dest + "." + aSrc.longName()
    
            if pm.objExists(newSrc):
                if aDest.longName() == "inverseScale" and aSrc.longName() == "scale":
                    continue
                
                print("Connect '%s' to '%s'"%(dest+"."+aSrc.longName(), aDest))
                try:
                    pm.connectAttr(newSrc, aDest, f=True)
                except:
                    pm.warning("transferConnections: cannot connect '%s' to '%s'"%(newSrc, aDest))                
            else:
                pm.warning("transferConnections: cannot find source "+newDest) 

transferConnections(@src, @dest, @inputs, @outputs)
        ]]></run>
<attributes>
<attr name="src" template="lineEditAndButton" category="General" connect=""><![CDATA[{"default": "value", "buttonCommand": "import maya.cmds as cmds\nls = cmds.ls(sl=True)\nif ls: value = ls[0]", "buttonLabel": "<", "value": "root_joint"}]]></attr>
<attr name="dest" template="lineEditAndButton" category="General" connect=""><![CDATA[{"default": "value", "buttonCommand": "import maya.cmds as cmds\nls = cmds.ls(sl=True)\nif ls: value = ls[0]", "buttonLabel": "<", "value": "joint1"}]]></attr>
<attr name="inputs" template="checkBox" category="General" connect=""><![CDATA[{"default": "checked", "checked": true}]]></attr>
<attr name="outputs" template="checkBox" category="General" connect=""><![CDATA[{"default": "checked", "checked": true}]]></attr>
</attributes>
<children>
</children>
</module>