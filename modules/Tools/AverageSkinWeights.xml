<module name="averageSkinWeights" muted="0" uid="d73db96a87244fc5bca4875396ed3dd8">
<run><![CDATA[import pymel.core as pm
import time

ls = pm.ls(sl=True, fl=True)
if ls and len(ls) > 1:    
    geom = ls[0].node()
    skin = pm.PyNode(pm.mel.eval("findRelatedSkinCluster "+geom))
    
    beginProgress("Calculating average", len(ls), 0.1)
    weights = {}    
    for i, v in enumerate(ls):
        stepProgress(i)
        idx = v.indices()[0]
           
        for inf in skin.influenceObjects():
            infIdx = skin.indexForInfluenceObject(inf)
            
            w = pm.getAttr(skin+".weightList[%s].weights[%s]" % (idx, infIdx))
            if not w:
                continue
            
            if inf not in weights: 
                weights[inf] = w
            else:
                weights[inf] = (weights[inf] + w)/2.0
                
    endProgress()        
    
    normalizeWeights = skin.normalizeWeights.get()   
    
    skin.normalizeWeights.set(0)
    for inf in weights:    
        infIdx = skin.indexForInfluenceObject(inf)        
        for v in ls:  
            idx = v.indices()[0]
            w = pm.getAttr(skin+".weightList[%s].weights[%s]"%(idx, infIdx))
            newWeight = weights[inf] * @percent + w*(1-@percent)
            pm.setAttr(skin+".weightList[%s].weights[%s]"%(idx, infIdx), newWeight)
    
    skin.normalizeWeights.set(normalizeWeights)]]></run>
<attributes>
<attr name="" template="label" category="General" connect=""><![CDATA[{"default": "text", "text": "Select vertices on skinned mesh.\nIf percent=1 then all selected vertices will have the same weights."}]]></attr>
<attr name="percent" template="lineEdit" category="General" connect=""><![CDATA[{"default": "value", "value": 0.5}]]></attr>
</attributes>
<children>
</children>
</module>